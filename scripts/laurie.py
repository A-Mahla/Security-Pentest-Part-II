import sys
import re


def readFile(file):

    parseFile = []
    with open(file, 'r') as f:
        for line in f:
            parseFile.append(line)
    return parseFile


def getNextLine(substr, file):

    for i in range(len(file)):
        if file[i] == substr + '\n':
            return file[i - 1]


def computeNextNbFile(line):

    pattern = r"{0}\s*(\d+)".format('//file')
    match = re.search(pattern, line)
    return '//file' + str(int(match.group(1)) + 1)



def sortFile(file):

    sortedFile = []
    isMain = False

    for i in range(len(file)):

        if 'getme' in file[i] and 'printf' not in file[i]:
            sortedFile.append(file[i])

            if 'return' in file[i + 1]:
                sortedFile.append(file[i + 1])
            elif  file[i + 1] == '{\n' and 'return' in file[i + 2]:
                sortedFile.append(file[i + 1])
                sortedFile.append(file[i + 2])
            else:
                sortedFile.append(getNextLine(computeNextNbFile(file[i + 1]), file))

            sortedFile.append('}\n')

        elif 'include' in file[i]:
            sortedFile.insert(0, file[i])

    for line in file:

        if 'main' in line:
            isMain = True

        if isMain:
            sortedFile.append(line)

        if '}' in line and isMain == True:
            isMain = False

    return sortedFile


def writeFile(sortedFile):

    with open("decode.c", 'w') as f:
        f.writelines(sortedFile)


if __name__=="__main__":

    writeFile(sortFile(readFile(sys.argv[1])))
